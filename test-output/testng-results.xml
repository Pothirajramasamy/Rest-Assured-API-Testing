<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" ignored="0" total="11" passed="11">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="8024" started-at="2018-07-30T02:09:20Z" finished-at="2018-07-30T02:09:28Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="8024" started-at="2018-07-30T02:09:20Z" finished-at="2018-07-30T02:09:28Z">
      <class name="weatherApi.ValidateWeatherApi">
        <test-method status="PASS" signature="createResponseSpecification()[pri:0, instance:weatherApi.ValidateWeatherApi@5e5792a0]" name="createResponseSpecification" is-config="true" duration-ms="1015" started-at="2018-07-30T02:09:20Z" finished-at="2018-07-30T02:09:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createResponseSpecification -->
        <test-method status="PASS" signature="initPath()[pri:0, instance:weatherApi.ValidateWeatherApi@5e5792a0]" name="initPath" is-config="true" duration-ms="2" started-at="2018-07-30T02:09:21Z" finished-at="2018-07-30T02:09:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initPath -->
        <test-method status="PASS" signature="checkResponseContentTypeJson()[pri:0, instance:weatherApi.ValidateWeatherApi@5e5792a0]" name="checkResponseContentTypeJson" duration-ms="2492" started-at="2018-07-30T02:09:21Z" finished-at="2018-07-30T02:09:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- checkResponseContentTypeJson -->
        <test-method status="PASS" signature="isKeyAvailable()[pri:0, instance:weatherApi.ValidateWeatherApi@5e5792a0]" name="isKeyAvailable" duration-ms="1117" started-at="2018-07-30T02:09:24Z" finished-at="2018-07-30T02:09:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- isKeyAvailable -->
        <test-method status="PASS" signature="negativeTest()[pri:0, instance:weatherApi.ValidateWeatherApi@5e5792a0]" name="negativeTest" duration-ms="670" started-at="2018-07-30T02:09:25Z" finished-at="2018-07-30T02:09:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- negativeTest -->
        <test-method status="PASS" signature="passQueryParametersToGetRequest()[pri:0, instance:weatherApi.ValidateWeatherApi@5e5792a0]" name="passQueryParametersToGetRequest" duration-ms="186" started-at="2018-07-30T02:09:26Z" finished-at="2018-07-30T02:09:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- passQueryParametersToGetRequest -->
        <test-method status="PASS" signature="responseTimeValidation()[pri:0, instance:weatherApi.ValidateWeatherApi@5e5792a0]" name="responseTimeValidation" duration-ms="182" started-at="2018-07-30T02:09:26Z" finished-at="2018-07-30T02:09:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- responseTimeValidation -->
        <test-method status="PASS" signature="useResponseSpecification()[pri:0, instance:weatherApi.ValidateWeatherApi@5e5792a0]" name="useResponseSpecification" duration-ms="265" started-at="2018-07-30T02:09:26Z" finished-at="2018-07-30T02:09:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- useResponseSpecification -->
        <test-method status="PASS" signature="useSinglePathParameter()[pri:0, instance:weatherApi.ValidateWeatherApi@5e5792a0]" name="useSinglePathParameter" duration-ms="690" started-at="2018-07-30T02:09:26Z" finished-at="2018-07-30T02:09:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- useSinglePathParameter -->
        <test-method status="PASS" signature="validateResponseCode()[pri:0, instance:weatherApi.ValidateWeatherApi@5e5792a0]" name="validateResponseCode" duration-ms="267" started-at="2018-07-30T02:09:27Z" finished-at="2018-07-30T02:09:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateResponseCode -->
        <test-method status="PASS" signature="validateWithDataProviders(java.lang.String, java.lang.String)[pri:0, instance:weatherApi.ValidateWeatherApi@5e5792a0]" name="validateWithDataProviders" duration-ms="197" started-at="2018-07-30T02:09:27Z" data-provider="city" finished-at="2018-07-30T02:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[94040,us]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Mountain View]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateWithDataProviders -->
        <test-method status="PASS" signature="validateWithDataProviders(java.lang.String, java.lang.String)[pri:0, instance:weatherApi.ValidateWeatherApi@5e5792a0]" name="validateWithDataProviders" duration-ms="269" started-at="2018-07-30T02:09:28Z" data-provider="city" finished-at="2018-07-30T02:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[03820,us]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Manchester]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateWithDataProviders -->
        <test-method status="PASS" signature="validateWithDataProviders(java.lang.String, java.lang.String)[pri:0, instance:weatherApi.ValidateWeatherApi@5e5792a0]" name="validateWithDataProviders" duration-ms="538" started-at="2018-07-30T02:09:28Z" data-provider="city" finished-at="2018-07-30T02:09:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[75024,us]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Frisco]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateWithDataProviders -->
      </class> <!-- weatherApi.ValidateWeatherApi -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
